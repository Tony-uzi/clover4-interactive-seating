# Generated by Django 5.2.6 on 2025-10-20 14:58

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0002_designlink_designshare'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConferenceEvent',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('organization_id', models.UUIDField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('event_date', models.DateTimeField(blank=True, null=True)),
                ('room_width', models.DecimalField(decimal_places=2, default=24.0, max_digits=10)),
                ('room_height', models.DecimalField(decimal_places=2, default=16.0, max_digits=10)),
                ('is_public', models.BooleanField(default=False)),
                ('share_token', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conference_events', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConferenceElement',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('element_type', models.CharField(choices=[('table_round', 'Round Table'), ('table_rectangle', 'Rectangle Table'), ('chair', 'Chair'), ('podium', 'Podium'), ('door', 'Door'), ('outlet', 'Outlet')], max_length=50)),
                ('label', models.CharField(max_length=255)),
                ('seats', models.IntegerField(default=0)),
                ('position_x', models.DecimalField(decimal_places=2, max_digits=10)),
                ('position_y', models.DecimalField(decimal_places=2, max_digits=10)),
                ('width', models.DecimalField(decimal_places=2, max_digits=10)),
                ('height', models.DecimalField(decimal_places=2, max_digits=10)),
                ('rotation', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('scale_x', models.DecimalField(decimal_places=2, default=1.0, max_digits=10)),
                ('scale_y', models.DecimalField(decimal_places=2, default=1.0, max_digits=10)),
                ('door_width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('door_swing', models.CharField(blank=True, max_length=20, null=True)),
                ('outlet_type', models.CharField(blank=True, max_length=50, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='api.conferenceevent')),
            ],
        ),
        migrations.CreateModel(
            name='ConferenceGroup',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('color', models.CharField(default='#3B82F6', max_length=20)),
                ('is_system', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='api.conferenceevent')),
            ],
        ),
        migrations.CreateModel(
            name='ConferenceGuest',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('dietary_requirements', models.TextField(blank=True)),
                ('company', models.CharField(blank=True, max_length=255)),
                ('phone', models.CharField(blank=True, max_length=50)),
                ('checked_in', models.BooleanField(default=False)),
                ('check_in_time', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guests', to='api.conferenceevent')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='guests', to='api.conferencegroup')),
            ],
        ),
        migrations.CreateModel(
            name='ConferenceSeatAssignment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('seat_number', models.IntegerField(blank=True, null=True)),
                ('element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seat_assignments', to='api.conferenceelement')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seat_assignments', to='api.conferenceevent')),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seat_assignments', to='api.conferenceguest')),
            ],
        ),
        migrations.CreateModel(
            name='TradeshowEvent',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('organization_id', models.UUIDField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('event_date_start', models.DateTimeField(blank=True, null=True)),
                ('event_date_end', models.DateTimeField(blank=True, null=True)),
                ('hall_width', models.DecimalField(decimal_places=2, default=40.0, max_digits=10)),
                ('hall_height', models.DecimalField(decimal_places=2, default=30.0, max_digits=10)),
                ('preset_layout', models.CharField(blank=True, max_length=50)),
                ('is_public', models.BooleanField(default=False)),
                ('share_token', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tradeshow_events', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TradeshowBooth',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('booth_type', models.CharField(choices=[('booth_standard', 'Standard Booth'), ('booth_large', 'Large Booth'), ('booth_premium', 'Premium Booth')], max_length=50)),
                ('category', models.CharField(choices=[('booth', 'Booth'), ('facility', 'Facility'), ('structure', 'Structure')], max_length=50)),
                ('label', models.CharField(max_length=255)),
                ('position_x', models.DecimalField(decimal_places=2, max_digits=10)),
                ('position_y', models.DecimalField(decimal_places=2, max_digits=10)),
                ('width', models.DecimalField(decimal_places=2, max_digits=10)),
                ('height', models.DecimalField(decimal_places=2, max_digits=10)),
                ('rotation', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('scale_x', models.DecimalField(decimal_places=2, default=1.0, max_digits=10)),
                ('scale_y', models.DecimalField(decimal_places=2, default=1.0, max_digits=10)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booths', to='api.tradeshowevent')),
            ],
        ),
        migrations.CreateModel(
            name='TradeshowRoute',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='Default Route', max_length=255)),
                ('route_type', models.CharField(default='auto', max_length=50)),
                ('booth_order', models.JSONField()),
                ('created_by', models.UUIDField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routes', to='api.tradeshowevent')),
            ],
        ),
        migrations.CreateModel(
            name='TradeshowVendor',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=255)),
                ('contact_name', models.CharField(max_length=255)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=50)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('booth_size_preference', models.CharField(blank=True, max_length=50)),
                ('website', models.CharField(blank=True, max_length=255)),
                ('logo_url', models.CharField(blank=True, max_length=512)),
                ('description', models.TextField(blank=True)),
                ('checked_in', models.BooleanField(default=False)),
                ('check_in_time', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendors', to='api.tradeshowevent')),
            ],
        ),
        migrations.CreateModel(
            name='TradeshowBoothAssignment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('booth', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='api.tradeshowbooth')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booth_assignments', to='api.tradeshowevent')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='api.tradeshowvendor')),
            ],
        ),
        migrations.AddIndex(
            model_name='conferenceevent',
            index=models.Index(fields=['user'], name='api_confere_user_id_47f456_idx'),
        ),
        migrations.AddIndex(
            model_name='conferenceevent',
            index=models.Index(fields=['organization_id'], name='api_confere_organiz_c89acd_idx'),
        ),
        migrations.AddIndex(
            model_name='conferenceevent',
            index=models.Index(fields=['share_token'], name='api_confere_share_t_f90e97_idx'),
        ),
        migrations.AddIndex(
            model_name='conferenceelement',
            index=models.Index(fields=['event'], name='api_confere_event_i_146c5c_idx'),
        ),
        migrations.AddIndex(
            model_name='conferencegroup',
            index=models.Index(fields=['event'], name='api_confere_event_i_d5dc77_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='conferencegroup',
            unique_together={('event', 'name')},
        ),
        migrations.AddIndex(
            model_name='conferenceguest',
            index=models.Index(fields=['event'], name='api_confere_event_i_d6ab21_idx'),
        ),
        migrations.AddIndex(
            model_name='conferenceguest',
            index=models.Index(fields=['email'], name='api_confere_email_20c516_idx'),
        ),
        migrations.AddIndex(
            model_name='conferenceguest',
            index=models.Index(fields=['group'], name='api_confere_group_i_88a4c0_idx'),
        ),
        migrations.AddIndex(
            model_name='conferenceseatassignment',
            index=models.Index(fields=['event'], name='api_confere_event_i_c7e9d3_idx'),
        ),
        migrations.AddIndex(
            model_name='conferenceseatassignment',
            index=models.Index(fields=['element'], name='api_confere_element_79df3c_idx'),
        ),
        migrations.AddIndex(
            model_name='conferenceseatassignment',
            index=models.Index(fields=['guest'], name='api_confere_guest_i_e75872_idx'),
        ),
        migrations.AddConstraint(
            model_name='conferenceseatassignment',
            constraint=models.UniqueConstraint(fields=('event', 'guest'), name='unique_guest_per_event'),
        ),
        migrations.AddConstraint(
            model_name='conferenceseatassignment',
            constraint=models.UniqueConstraint(fields=('event', 'element', 'seat_number'), name='unique_seat_per_element_event'),
        ),
        migrations.AddIndex(
            model_name='tradeshowevent',
            index=models.Index(fields=['user'], name='api_tradesh_user_id_cb694f_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeshowevent',
            index=models.Index(fields=['organization_id'], name='api_tradesh_organiz_439c7e_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeshowevent',
            index=models.Index(fields=['share_token'], name='api_tradesh_share_t_5e50b6_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeshowbooth',
            index=models.Index(fields=['event'], name='api_tradesh_event_i_784a11_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeshowbooth',
            index=models.Index(fields=['category'], name='api_tradesh_categor_74760b_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeshowroute',
            index=models.Index(fields=['event'], name='api_tradesh_event_i_2946ad_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeshowvendor',
            index=models.Index(fields=['event'], name='api_tradesh_event_i_6b8e9b_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeshowvendor',
            index=models.Index(fields=['company_name'], name='api_tradesh_company_1484d5_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeshowboothassignment',
            index=models.Index(fields=['event'], name='api_tradesh_event_i_9ffb3b_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeshowboothassignment',
            index=models.Index(fields=['booth'], name='api_tradesh_booth_i_6cd918_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeshowboothassignment',
            index=models.Index(fields=['vendor'], name='api_tradesh_vendor__5b8e68_idx'),
        ),
        migrations.AddConstraint(
            model_name='tradeshowboothassignment',
            constraint=models.UniqueConstraint(fields=('event', 'booth'), name='unique_vendor_per_booth_event'),
        ),
        migrations.AddConstraint(
            model_name='tradeshowboothassignment',
            constraint=models.UniqueConstraint(fields=('event', 'vendor'), name='unique_booth_per_vendor_event'),
        ),
    ]
