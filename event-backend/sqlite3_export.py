#!/usr/bin/env python3
"""
export_sqlite.py
把 db.sqlite3 完整导出为 dump.sql
用法: python export_sqlite.py [db_file] [out_file]
默认: python export_sqlite.py
"""

import sqlite3
import sys
import os
import datetime

DB_FILE = sys.argv[1] if len(sys.argv) > 1 else "db.sqlite3"
OUT_FILE = sys.argv[2] if len(sys.argv) > 2 else "dump.sql"

def esc(name):
    """转义标识符"""
    return '"' + name.replace('"', '""') + '"'

def dump_sqlite(db_path, out_path):
    if not os.path.isfile(db_path):
        sys.exit(f"❌  文件不存在: {db_path}")
    conn = sqlite3.connect(db_path, isolation_level=None)
    cur = conn.cursor()

    with open(out_path, "w", encoding="utf-8") as f:
        f.write("-- SQLite dump generated by export_sqlite.py\n")
        f.write(f"-- {datetime.datetime.now()}\n")
        f.write("PRAGMA foreign_keys=OFF;\nBEGIN TRANSACTION;\n")

        # 所有表
        cur.execute("SELECT name FROM sqlite_master WHERE type='table'")
        tables = [row[0] for row in cur.fetchall()]

        for tbl in tables:
            # 表结构
            ddl = cur.execute(
                f"SELECT sql FROM sqlite_master WHERE type='table' AND name=?", (tbl,)
            ).fetchone()[0]
            f.write(f"\nDROP TABLE IF EXISTS {esc(tbl)};\n")
            f.write(ddl + ";\n")

            # 数据
            cur.execute(f"SELECT * FROM {esc(tbl)}")
            rows = cur.fetchall()
            if not rows:
                continue
            colnames = [desc[0] for desc in cur.description]
            placeholders = ",".join("?" for _ in colnames)
            insert_sql = f"INSERT INTO {esc(tbl)} ({','.join(esc(c) for c in colnames)}) VALUES ({placeholders});"

            # 批量写入，1000 条一事务
            for i in range(0, len(rows), 1000):
                f.write("BEGIN;\n")
                for row in rows[i : i + 1000]:
                    # 把每行转成 SQL 字面量
                    row_sql = insert_sql
                    for val in row:
                        if val is None:
                            row_sql = row_sql.replace("?", "NULL", 1)
                        elif isinstance(val, (int, float)):
                            row_sql = row_sql.replace("?", str(val), 1)
                        else:
                            row_sql = row_sql.replace(
                                "?", "'" + str(val).replace("'", "''") + "'", 1
                            )
                    f.write(row_sql + "\n")
                f.write("COMMIT;\n")

        f.write("COMMIT;\n")
    conn.close()
    print(f"✅  已导出: {os.path.abspath(out_path)}")

if __name__ == "__main__":
    dump_sqlite(DB_FILE, OUT_FILE)