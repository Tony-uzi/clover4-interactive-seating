services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: event_db
    environment:
      POSTGRES_DB: event_db
      POSTGRES_USER: event_user
      POSTGRES_PASSWORD: event_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U event_user -d event_db"]
      interval: 10s
      timeout: 5s
      retries: 5
  # Django Backend
  backend-service:
    build:
      context: ./event-backend
      dockerfile: Dockerfile
    container_name: event_backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./event-backend:/app
      - media_files:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-8(pjrjnofge28%zooth-$$ukuwm!*m&ah=hc8gt&gh7cge7hysp
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_NAME=event_db
      - DATABASE_USER=event_user
      - DATABASE_PASSWORD=event_password
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend-service
      - CORS_ALLOW_ALL_ORIGINS=True
    depends_on:
      db:
        condition: service_healthy

  # React Frontend
  frontend:
    build:
      context: ./event-layout
      dockerfile: Dockerfile
    container_name: event_frontend
    ports:
      - "80:80"
    depends_on:
      - backend-service
    environment:
      - VITE_API_URL=http://localhost:8000

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: event_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@event.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  postgres_data:
  media_files:
  redis_data: